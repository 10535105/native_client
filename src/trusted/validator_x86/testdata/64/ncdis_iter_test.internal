0000000000000000: 00 c0                                        add %al, %al
  { 0x00,
    NACLi_386L,
    InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeRex) | InstFlag(OpcodeLockable) | InstFlag(OperandSize_b),
    InstAdd,
    2, {
      { E_Operand, OpFlag(RexExcludesAhBhChDh) | OpFlag(OpUse) | OpFlag(OpSet) },
      { G_Operand, OpFlag(RexExcludesAhBhChDh) | OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %al, ExprSet | ExprUsed | ExprSize8 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %al, ExprUsed | ExprSize8 },
};
0000000000000000: 01 c0                                        add %eax, %eax
  { 0x01,
    NACLi_386L,
    InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeLockable) | InstFlag(OperandSize_w) | InstFlag(OperandSize_v),
    InstAdd,
    2, {
      { E_Operand, OpFlag(OpUse) | OpFlag(OpSet) },
      { G_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %eax, ExprSet | ExprUsed | ExprSize32 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %eax, ExprUsed | ExprSize32 },
};
0000000000000000: 41 01 c3                                     add %r11d, %eax
  { 0x01,
    NACLi_386L,
    InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeLockable) | InstFlag(OperandSize_w) | InstFlag(OperandSize_v),
    InstAdd,
    2, {
      { E_Operand, OpFlag(OpUse) | OpFlag(OpSet) },
      { G_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %r11d, ExprSet | ExprUsed | ExprSize32 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %eax, ExprUsed | ExprSize32 },
};
0000000000000000: 44 01 d8                                     add %eax, %r11d
  { 0x01,
    NACLi_386L,
    InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeLockable) | InstFlag(OperandSize_w) | InstFlag(OperandSize_v),
    InstAdd,
    2, {
      { E_Operand, OpFlag(OpUse) | OpFlag(OpSet) },
      { G_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %eax, ExprSet | ExprUsed | ExprSize32 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %r11d, ExprUsed | ExprSize32 },
};
0000000000000000: 48 01 c3                                     add %rbx, %rax
  { 0x01,
    NACLi_386L,
    InstFlag(OpcodeUsesRexW) | InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeLockable) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o),
    InstAdd,
    2, {
      { Eo_Operand, OpFlag(OpUse) | OpFlag(OpSet) },
      { Go_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %rbx, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %rax, ExprUsed | ExprSize64 },
};
0000000000000000: 67 03 18                                     add %ebx, [%eax]
  { 0x03,
    NACLi_386L,
    InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeLockable) | InstFlag(OperandSize_w) | InstFlag(OperandSize_v),
    InstAdd,
    2, {
      { G_Operand, OpFlag(OpUse) | OpFlag(OpSet) },
      { E_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[8] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %ebx, ExprSet | ExprUsed | ExprSize32 },
  { OperandReference[1] , 1, 0 },
  { ExprMemOffset[4] , 0, ExprUsed },
  { ExprRegister[0] , %eax, ExprUsed | ExprSize32 },
  { ExprRegister[0] , %unknown, 0 },
  { ExprConstant[0] , 1, ExprSize8 },
  { ExprConstant[0] , 0, ExprSize8 },
};
0000000000000000: 67 02 04 00                                  add %al, [%rax+%rax*1]
  { 0x02,
    NACLi_386L,
    InstFlag(OpcodeUsesModRm) | InstFlag(OpcodeRex) | InstFlag(OpcodeLockable) | InstFlag(OperandSize_b),
    InstAdd,
    2, {
      { G_Operand, OpFlag(RexExcludesAhBhChDh) | OpFlag(OpUse) | OpFlag(OpSet) },
      { E_Operand, OpFlag(RexExcludesAhBhChDh) | OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[8] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %al, ExprSet | ExprUsed | ExprSize8 },
  { OperandReference[1] , 1, 0 },
  { ExprMemOffset[4] , 0, ExprUsed },
  { ExprRegister[0] , %rax, ExprUsed | ExprSize64 },
  { ExprRegister[0] , %rax, ExprUsed | ExprSize64 },
  { ExprConstant[0] , 1, ExprSize8 },
  { ExprConstant[0] , 0, ExprSize8 },
};
0000000000000000: 48 83 ec 08                                  sub %rsp, 0x8
  { 0x83,
    NACLi_386L,
    InstFlag(OpcodeUsesRexW) | InstFlag(OpcodeInModRm) | InstFlag(OpcodeIb) | InstFlag(OpcodeLockable) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o),
    InstSub,
    3, {
      { Opcode5, OpFlag(OperandExtendsOpcode) },
      { E_Operand, OpFlag(OpUse) | OpFlag(OpSet) },
      { I_Operand, OpFlag(OpUse) },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprConstant[0] , 0x8, ExprUsed | ExprSize8 | EpxrHexConstant },
};
00000000004003d4: e8 83 00 00 00                               call 0x40045c
  { 0xe8,
    NACLi_JMPZ,
    InstFlag(OpcodeIv) | InstFlag(OperandSize_v),
    InstCall,
    3, {
      { RegREIP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { RegRESP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { J_Operand, OpFlag(OpUse) | OpFlag(OperandNear) | OpFlag(OperandRelative) },
    },
    NULL
  };
ExprNodeVector[6] = {
  { OperandReference[1] , 0, ExprImplicit },
  { ExprRegister[0] , %rip, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 1, ExprImplicit },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprConstant[0] , 0x40045c, ExprUsed | EpxrHexConstant },
};
00000000004003de: e8 7d 05 00 00                               call 0x400960
  { 0xe8,
    NACLi_JMPZ,
    InstFlag(OpcodeIv) | InstFlag(OperandSize_v),
    InstCall,
    3, {
      { RegREIP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { RegRESP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { J_Operand, OpFlag(OpUse) | OpFlag(OperandNear) | OpFlag(OperandRelative) },
    },
    NULL
  };
ExprNodeVector[6] = {
  { OperandReference[1] , 0, ExprImplicit },
  { ExprRegister[0] , %rip, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 1, ExprImplicit },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprConstant[0] , 0x400960, ExprUsed | EpxrHexConstant },
};
0000000000000000: c3                                           ret
  { 0xc3,
    NACLi_RETURN,
    0,
    InstRet,
    2, {
      { RegREIP, OpFlag(OpSet) | OpFlag(OpImplicit) },
      { RegRESP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, ExprImplicit },
  { ExprRegister[0] , %rip, ExprSet | ExprSize64 },
  { OperandReference[1] , 1, ExprImplicit },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
};
0000000000000000: ff 35 ea 0d 20 00                            push 0x200dea
  { 0xff,
    NACLi_386,
    InstFlag(OpcodeInModRm) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o) | InstFlag(OperandSizeDefaultIs64),
    InstPush,
    3, {
      { Opcode6, OpFlag(OperandExtendsOpcode) },
      { RegRSP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { E_Operand, OpFlag(OpSet) },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 1, ExprImplicit },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprConstant[0] , 0x200dea, ExprSet | ExprSize32 | EpxrHexConstant },
};
0000000000000000: ff 25 ec 0d 20 00                            jmp 0x200dec
  { 0xff,
    NACLi_INDIRECT,
    InstFlag(OpcodeInModRm) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o) | InstFlag(OperandSizeForce64),
    InstJmp,
    3, {
      { Opcode4, OpFlag(OperandExtendsOpcode) },
      { RegRIP, OpFlag(OpSet) | OpFlag(OpImplicit) },
      { E_Operand, OpFlag(OpUse) | OpFlag(OperandNear) },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 1, ExprImplicit },
  { ExprRegister[0] , %rip, ExprSet | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprConstant[0] , 0x200dec, ExprUsed | ExprSize32 | EpxrHexConstant },
};
0000000000000000: 0f 1f 40 00                                  nop %eax, [%eax]
  { 0x1f,
    NACLi_386,
    InstFlag(OpcodeInModRm) | InstFlag(OperandSize_w) | InstFlag(OperandSize_v),
    InstNop,
    3, {
      { Opcode0, OpFlag(OperandExtendsOpcode) },
      { G_Operand, 0 },
      { E_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[8] = {
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %eax, ExprSize32 },
  { OperandReference[1] , 2, 0 },
  { ExprMemOffset[4] , 0, 0 },
  { ExprRegister[0] , %eax, ExprUsed | ExprSize32 },
  { ExprRegister[0] , %unknown, 0 },
  { ExprConstant[0] , 1, ExprSize8 },
  { ExprConstant[0] , 0x0, ExprSize8 | EpxrHexConstant },
};
0000000000000000: 68 00 00 00 00                               push 0x0
  { 0x68,
    NACLi_386,
    InstFlag(OpcodeIv) | InstFlag(OperandSize_v),
    InstPush,
    2, {
      { RegRESP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { I_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, ExprImplicit },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprConstant[0] , 0x0, ExprUsed | ExprSize32 | EpxrHexConstant },
};
0000000000400403: e9 e0 ff ff ff                               jmp 0x4003e8
  { 0xe9,
    NACLi_JMPZ,
    InstFlag(OpcodeIv) | InstFlag(OperandSize_v),
    InstJmp,
    2, {
      { RegREIP, OpFlag(OpSet) | OpFlag(OpImplicit) },
      { J_Operand, OpFlag(OpUse) | OpFlag(OperandNear) | OpFlag(OperandRelative) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, ExprImplicit },
  { ExprRegister[0] , %rip, ExprSet | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprConstant[0] , 0x4003e8, ExprUsed | EpxrHexConstant },
};
0000000000000000: 49 89 d1                                     mov %r9, %rdx
  { 0x89,
    NACLi_386,
    InstFlag(OpcodeUsesRexW) | InstFlag(OpcodeUsesModRm) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o),
    InstMov,
    2, {
      { E_Operand, OpFlag(OpSet) },
      { G_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %r9, ExprSet | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %rdx, ExprUsed | ExprSize64 },
};
0000000000000000: 5e                                           pop %rsi
  { 0x5e,
    NACLi_386,
    InstFlag(OpcodePlusR) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o) | InstFlag(OperandSizeDefaultIs64),
    InstPop,
    3, {
      { OpcodeBaseMinus6, OpFlag(OperandExtendsOpcode) },
      { RegRSP, OpFlag(OpUse) | OpFlag(OpSet) | OpFlag(OpImplicit) },
      { G_OpcodeBase, OpFlag(OpSet) },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 1, ExprImplicit },
  { ExprRegister[0] , %rsp, ExprSet | ExprUsed | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprRegister[0] , %rsi, ExprSet | ExprSize64 },
};
0000000000000000: 49 c7 c0 c0 08 40 00                         mov %r8, 0x4008c0
  { 0xc7,
    NACLi_386,
    InstFlag(OpcodeUsesRexW) | InstFlag(OpcodeInModRm) | InstFlag(OpcodeIv) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o),
    InstMov,
    3, {
      { Opcode0, OpFlag(OperandExtendsOpcode) },
      { E_Operand, OpFlag(OpSet) },
      { I_Operand, OpFlag(OpUse) },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %r8, ExprSet | ExprSize64 },
  { OperandReference[1] , 2, 0 },
  { ExprConstant[0] , 0x4008c0, ExprUsed | ExprSize32 | EpxrHexConstant },
};
0000000000000000: f4                                           hlt
  { 0xf4,
    NACLi_386,
    0,
    InstHlt,
    0, {
      { Unknown_Operand, 0 },
      { Unknown_Operand, 0 },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[0] = {
};
0000000000000000: 48 8b 05 61 0d 20 00                         mov %rax, 0x200d61
  { 0x8b,
    NACLi_386,
    InstFlag(OpcodeUsesRexW) | InstFlag(OpcodeUsesModRm) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o),
    InstMov,
    2, {
      { G_Operand, OpFlag(OpUse) },
      { E_Operand, OpFlag(OpSet) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %rax, ExprUsed | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprConstant[0] , 0x200d61, ExprSet | ExprSize32 | EpxrHexConstant },
};
0000000000000000: 48 85 c0                                     test %rax, %rax
  { 0x85,
    NACLi_386,
    InstFlag(OpcodeUsesRexW) | InstFlag(OpcodeUsesModRm) | InstFlag(Opcode64Only) | InstFlag(OperandSize_o),
    InstTest,
    2, {
      { E_Operand, OpFlag(OpUse) },
      { G_Operand, OpFlag(OpUse) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, 0 },
  { ExprRegister[0] , %rax, ExprUsed | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprRegister[0] , %rax, ExprUsed | ExprSize64 },
};
000000000040046a: 74 02                                        jz 0x40046e
  { 0x74,
    NACLi_JMP8,
    InstFlag(OpcodeIb) | InstFlag(OperandSize_b),
    InstJz,
    2, {
      { RegREIP, OpFlag(OpSet) | OpFlag(OpImplicit) },
      { J_Operand, OpFlag(OpUse) | OpFlag(OperandNear) | OpFlag(OperandRelative) },
      { Unknown_Operand, 0 },
    },
    NULL
  };
ExprNodeVector[4] = {
  { OperandReference[1] , 0, ExprImplicit },
  { ExprRegister[0] , %rip, ExprSet | ExprSize64 },
  { OperandReference[1] , 1, 0 },
  { ExprConstant[0] , 0x40046e, ExprUsed | EpxrHexConstant },
};
