# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

# TODO: move this to common env
if env.Bit('host_windows'):
  env.Replace(
# This is needed because Windows builds are case-insensitive.
# Without this we use nacl-as, which doesn't handle include directives, etc.
    ASCOM = '$CCCOM',
  )
else:
  env.Replace(
# This is needed because Windows builds are case-insensitive.
# Without this we use nacl-as, which doesn't handle include directives, etc.
    ASFLAGS = '$CCFLAGS',
  )

nc_threads_source_files = [
    # C source files
    'nc_thread.c',
    'nc_mutex.c',
    'nc_condvar.c',
    'nc_semaphore.c',
    'nc_hash.c',
    # Assembly source files
    'nacl_mutex.S',
]

env.ComponentLibrary('libpthread', nc_threads_source_files)

env.AddLibraryToSdk(['libpthread'])

Alias('install_libpthread',
       # Copy the header file to the include directory.
       [env.Replicate('$NACL_SDK_ROOT/nacl/include', ['pthread.h',
                                                      'nc_system.h',
                                                      'atomic_ops.h',
                                                      'semaphore.h' ])])
